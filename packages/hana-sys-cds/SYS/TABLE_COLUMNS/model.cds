// generated by cds-compiler version 3.5.4 
@cds.persistence.exists : true
@title : 'Available table columns'
entity TABLE_COLUMNS {
  @title : 'Schema name'
  SCHEMA_NAME : String(256);
  @title : 'Table name'
  TABLE_NAME : String(256);
  @title : 'Object ID of the table'
  TABLE_OID : Integer64;
  @title : 'Name of the column'
  COLUMN_NAME : String(256);
  @title : 'Ordinal position of the column in a record'
  POSITION : Integer;
  @title : 'SQL data type ID of the column'
  DATA_TYPE_ID : hana.SMALLINT;
  @title : 'SQL data type name of the column'
  DATA_TYPE_NAME : String(16);
  @title : 'Offset of the column in the record'
  OFFSET : hana.SMALLINT;
  @title : 'Number of chars for char types, number of max digits for numeric types; number of chars for datetime types, number of bytes for LOB types'
  LENGTH : Integer;
  @title : 'Numeric types: the maximum number of digits to the right of the decimal point; time, timestamp: the decimal digits are defined as the number of digits to the right of the decimal point in the second''s component of the data'
  SCALE : Integer;
  @title : 'Specifies whether the column is allowed to accept null value: ''TRUE''/''FALSE'''
  IS_NULLABLE : String(5);
  @title : 'Default value of the column'
  DEFAULT_VALUE : String(5000);
  @title : 'Description for this column'
  COMMENTS : String(5000);
  @title : 'DDIC data type ID'
  DDIC_DATA_TYPE_ID : Integer;
  @title : 'DDIC data type name'
  DDIC_DATA_TYPE_NAME : String(7);
  @title : 'Type of compression: ''DEFAULT''/''PREFIXED''/''SPARSE''/''CLUSTERED''/''INDIRECT''/''RLE''. The default value for the column is shown. The actual value can be checked in system view M_CS_COLUMNS. For row store columns ''NONE'' is shown'
  COMPRESSION_TYPE : String(9);
  @title : 'Type of index: ''NONE''/''FULL'''
  INDEX_TYPE : String(4);
  @title : 'ID of the column'
  COLUMN_ID : Integer64;
  @title : 'Specifies if column is preloaded: ''TRUE''/''FALSE'''
  PRELOAD : String(5);
  @title : 'Specifies the expression of the column created by GENERATED ... AS'
  GENERATED_ALWAYS_AS : String(5000);
  @title : 'Specifies if column has fuzzy search index: ''TRUE''/''FALSE'''
  FUZZY_SEARCH_INDEX : String(5);
  @title : 'Specifies fuzzy search mode'
  FUZZY_SEARCH_MODE : String(32);
  @title : 'Specifies memory threshold in bytes for LOB types'
  MEMORY_THRESHOLD : Integer;
  @title : 'Specifies unit of column data loading: ''TABLE''/''COLUMN''/''PAGE''/''DEFAULT'''
  LOAD_UNIT : String(7);
  @title : '''ALWAYS AS'' if the column is generation column, ''ALWAYS CALCULATED AS'' if the column is calculated field, ''ALWAYS AS IDENTITY''/''BY DEFAULT AS IDENTITY'' if the column is an identity column whose values are always generated or generated by default, NULL otherwise'
  GENERATION_TYPE : String(32);
  @title : 'Specifies whether the column is part of cached data: ''TRUE''/''FALSE'''
  IS_CACHABLE : String(5);
  @title : 'Specifies whether the column is part of cache key: ''TRUE''/''FALSE'''
  IS_CACHE_KEY : String(5);
  @title : 'Specifies row order position'
  ROW_ORDER_POSITION : hana.SMALLINT;
  @title : 'Specifies whether the column is hidden: ''TRUE''/''FALSE'''
  IS_HIDDEN : String(5);
  @title : 'Specifies whether the column is masked: ''TRUE''/''FALSE'''
  IS_MASKED : String(5);
  @title : 'The mask expression, only visible for user with appropriate privilege'
  MASK_EXPRESSION : String(5000);
  @title : 'Specifies whether the column is undergoing encryption, decryption, reencryption with a different column encryption key, already encrypted, or is in cleartext'
  CLIENTSIDE_ENCRYPTION_STATUS : String(16);
  @title : 'UUID of the column encryption key used to encrypt this column'
  CLIENTSIDE_ENCRYPTION_COLUMN_KEY_ID : Binary(16);
  @title : 'Column encryption mode'
  CLIENTSIDE_ENCRYPTION_MODE : String(16);
  @title : '''TRUE'' if the column has Persistent Memory preference ON, ''FALSE'' if column Persistent Memory preference is OFF'
  PERSISTENT_MEMORY : String(5);
  @title : 'Comma separated list of ranges of user specified logical NUMA node indexes'
  NUMA_NODE_INDEXES : String(5000);
};

